@implements IDisposable

@inject NavigationManager NavigationManager

<div class="container flex items-center justify-between h-full px-6 mx-auto text-purple-600 dark:text-purple-300">
	<!-- Wrapper for hamburger to align it to the right -->
	<div class="flex-1 flex justify-end">
		<button class="p-1 rounded-md md:hidden focus:outline-none focus:shadow-outline-purple"
				onclick="toggleSideMenu()"
				aria-label="Menu">
			<svg class="w-6 h-6" aria-hidden="true" fill="currentColor" viewBox="0 0 20 20">
				<path fill-rule="evenodd"
					  d="M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z"
					  clip-rule="evenodd"></path>
			</svg>
		</button>
	</div>

	<ul class="flex items-center flex-shrink-0 space-x-6">
		<AuthorizeView>
			<Authorized>
				<!-- Notifications menu -->
				<li class="relative">
					<button class="relative align-middle rounded-md focus:outline-none focus:shadow-outline-purple"
							onclick="toggleNotificationsMenu()"
							aria-label="Notifications"
							aria-haspopup="true">
						<svg class="w-5 h-5"
							 aria-hidden="true"
							 fill="currentColor"
							 viewBox="0 0 20 20">
							<path d="M10 2a6 6 0 00-6 6v3.586l-.707.707A1 1 0 004 14h12a1 1 0 00.707-1.707L16 11.586V8a6 6 0 00-6-6zM10 18a3 3 0 01-3-3h6a3 3 0 01-3 3z"></path>
						</svg>
						<!-- Notification badge -->
						<span aria-hidden="true"
							  class="absolute top-0 right-0 inline-block w-3 h-3 transform translate-x-1 -translate-y-1 bg-red-600 border-2 border-white rounded-full dark:border-gray-800"></span>
					</button>
					<ul class="hidden absolute right-0 w-56 p-2 mt-2 space-y-2 text-gray-600 bg-white border border-gray-100 rounded-md shadow-md dark:text-gray-300 dark:border-gray-700 dark:bg-gray-700"
						aria-label="submenu">

						<li class="flex">
							<div class="inline-flex items-center justify-between w-full px-2 py-1 text-sm font-semibold transition-colors duration-150 rounded-md hover:bg-gray-100 hover:text-gray-800 dark:hover:bg-gray-800 dark:hover:text-gray-200">
								<span>Messages</span>
								<span class="inline-flex items-center justify-center px-2 py-1 text-xs font-bold leading-none text-red-600 bg-red-100 rounded-full dark:text-red-100 dark:bg-red-600">
									13
								</span>
							</div>
						</li>

						<li class="flex">
							<div class="inline-flex items-center justify-between w-full px-2 py-1 text-sm font-semibold transition-colors duration-150 rounded-md hover:bg-gray-100 hover:text-gray-800 dark:hover:bg-gray-800 dark:hover:text-gray-200">
								<span>Sales</span>
								<span class="inline-flex items-center justify-center px-2 py-1 text-xs font-bold leading-none text-red-600 bg-red-100 rounded-full dark:text-red-100 dark:bg-red-600">
									2
								</span>
							</div>
						</li>

						<li class="flex">
							<div class="inline-flex items-center justify-between w-full px-2 py-1 text-sm font-semibold transition-colors duration-150 rounded-md hover:bg-gray-100 hover:text-gray-800 dark:hover:bg-gray-800 dark:hover:text-gray-200">
								<span>Alerts</span>
							</div>
						</li>
					</ul>
				</li>

				<!-- Profile menu -->
				<li class="relative">
					<button class="align-middle rounded-full focus:shadow-outline-purple focus:outline-none"
							onclick="toggleProfileMenu()"
							aria-label="Account"
							aria-haspopup="true">
						<svg class="w-6 h-6" aria-hidden="true" fill="currentColor" viewBox="0 0 24 24">
							<path d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"></path>
						</svg>
					</button>
					<ul class="hidden absolute right-0 w-56 p-2 mt-2 space-y-2 text-gray-600 bg-white border border-gray-100 rounded-md shadow-md dark:border-gray-700 dark:text-gray-300 dark:bg-gray-700" aria-label="submenu">

						<!-- Profile -->
						<li class="flex items-center">
							<NavLink href="Account/Manage" class="flex items-center w-full px-2 py-1 text-sm transition-colors duration-150 rounded-md hover:bg-gray-100 hover:text-gray-800 dark:hover:bg-gray-800 dark:hover:text-gray-200"style="margin-left:0rem">
								<svg class="w-4 h-4 mr-3 flex-shrink-0" aria-hidden="true" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" viewBox="0 0 24 24" stroke="currentColor">
									<path d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
								</svg>
								<span class="leading-none flex-grow">Profile</span>
							</NavLink>
						</li>

						<!-- Logout -->
						<li class="flex items-center">
							<form action="Account/Logout" method="post" class="flex items-center w-full px-2 py-1 text-sm transition-colors duration-150 rounded-md hover:bg-gray-100 hover:text-gray-800 dark:hover:bg-gray-800 dark:hover:text-gray-200">
								<AntiforgeryToken />
								<input type="hidden" name="ReturnUrl" value="@currentUrl" />
								<button type="submit" class="flex items-center">
									<svg class="w-4 h-4 mr-3 flex-shrink-0" aria-hidden="true" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" viewBox="0 0 24 24" stroke="currentColor">
										<path d="M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1"></path>
									</svg>
									<span class="leading-none flex-grow">Log out</span>
								</button>
							</form>
						</li>

					</ul>

				</li>
			</Authorized>
		</AuthorizeView>
	</ul>
</div>

@code {
	private string? currentUrl;

	private string activeLink;

	protected override void OnInitialized()
	{
		// Initialize the active link based on the current URL
		activeLink = NavigationManager.Uri;
		NavigationManager.LocationChanged += OnLocationChanged;
	}

	private void SetActive(string link)
	{
		activeLink = link;
	}

	private bool IsActive(string link)
	{
		// Check if the current active link matches the provided link
		return activeLink.Contains(link);
	}

	private void OnLocationChanged(object sender, LocationChangedEventArgs e)
	{
		// Update the active link when the location changes
		activeLink = e.Location;
		StateHasChanged();
	}

	public void Dispose()
	{
		// Unsubscribe from the event when the component is disposed
		NavigationManager.LocationChanged -= OnLocationChanged;
	}
}

