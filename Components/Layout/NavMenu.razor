
@inject NavigationManager NavigationManager

<div class="text-gray-500 dark:text-gray-400">

	<img class="mx-auto mt-4" src="assets/img/login-office.png" alt="" style="width:50%; height:50%">

	<ul class="mt-4">
		<li class="relative px-6 py-3">
			@* Highlight Track *@
			@if (IsActive("dashboard"))
			{
				<span class="absolute inset-y-0 left-0 w-1 bg-purple-600 rounded-tr-lg rounded-br-lg"
					  aria-hidden="true"></span>
			}
			<NavLink class="inline-flex items-center w-full text-sm font-semibold transition-colors duration-150 hover:text-gray-800 dark:hover:text-gray-200 dark:text-gray-100"
					 href="dashboard" Match="NavLinkMatch.All">
				<svg class="w-5 h-5"
					 aria-hidden="true"
					 fill="none"
					 stroke-linecap="round"
					 stroke-linejoin="round"
					 stroke-width="2"
					 viewBox="0 0 24 24"
					 stroke="currentColor">
					<path d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"></path>
				</svg>
				<span class="ml-4">Dashboard</span>
			</NavLink>
		</li>
	</ul>
	<ul>
		<li class="relative px-6 py-3">
			@* Highlight Track *@
			@if (IsActive("departments"))
			{
				<span class="absolute inset-y-0 left-0 w-1 bg-purple-600 rounded-tr-lg rounded-br-lg"
					  aria-hidden="true"></span>
			}
			<NavLink class="inline-flex items-center w-full text-sm font-semibold transition-colors duration-150 hover:text-gray-800 dark:hover:text-gray-200"
					 href="departments">
				<svg class="w-5 h-5"
					 aria-hidden="true"
					 fill="none"
					 stroke-linecap="round"
					 stroke-linejoin="round"
					 stroke-width="2"
					 viewBox="0 0 24 24"
					 stroke="currentColor">
					<path d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01"></path>
				</svg>
				<span class="ml-4">Departments</span>
			</NavLink>
		</li>
	</ul>

	<ul>
		<li class="relative px-6 py-3">
			@* Highlight Track *@
			@if (IsActive("semesters"))
			{
				<span class="absolute inset-y-0 left-0 w-1 bg-purple-600 rounded-tr-lg rounded-br-lg"
					  aria-hidden="true"></span>
			}
			<a class="inline-flex items-center w-full text-sm font-semibold transition-colors duration-150 hover:text-gray-800 dark:hover:text-gray-200"
			   href="semesters">
				<svg class="w-5 h-5"
					 aria-hidden="true"
					 fill="none"
					 stroke-linecap="round"
					 stroke-linejoin="round"
					 stroke-width="2"
					 viewBox="0 0 24 24"
					 stroke="currentColor">
					<path d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
				</svg>
				<span class="ml-4">Semesters</span>
			</a>
		</li>
	</ul>


	<ul>
		<li class="relative px-6 py-3">
			@* Highlight Track *@
			@if (IsActive("majors"))
			{
				<span class="absolute inset-y-0 left-0 w-1 bg-purple-600 rounded-tr-lg rounded-br-lg"
					  aria-hidden="true"></span>
			}
			<a class="inline-flex items-center w-full text-sm font-semibold transition-colors duration-150 hover:text-gray-800 dark:hover:text-gray-200"
			   href="majors">
				<svg class="w-5 h-5"
					 aria-hidden="true"
					 fill="none"
					 stroke-linecap="round"
					 stroke-linejoin="round"
					 stroke-width="2"
					 viewBox="0 0 24 24"
					 stroke="currentColor">
					<path d="M11 3.055A9.001 9.001 0 1020.945 13H11V3.055z"></path>
					<path d="M20.488 9H15V3.512A9.025 9.025 0 0120.488 9z"></path>
				</svg>
				<span class="ml-4">Majors</span>
			</a>
		</li>
	</ul>


	<ul>
		<li class="relative px-6 py-3">
			@* Highlight Track *@
			@if (IsActive("subjects"))
			{
				<span class="absolute inset-y-0 left-0 w-1 bg-purple-600 rounded-tr-lg rounded-br-lg"
					  aria-hidden="true"></span>
			}
			<a class="inline-flex items-center w-full text-sm font-semibold transition-colors duration-150 hover:text-gray-800 dark:hover:text-gray-200"
			   href="subjects">
				<svg class="w-5 h-5"
					 aria-hidden="true"
					 fill="none"
					 stroke-linecap="round"
					 stroke-linejoin="round"
					 stroke-width="2"
					 viewBox="0 0 24 24"
					 stroke="currentColor">
					<path d="M15 15l-2 5L9 9l11 4-5 2zm0 0l5 5M7.188 2.239l.777 2.897M5.136 7.965l-2.898-.777M13.95 4.05l-2.122 2.122m-5.657 5.656l-2.12 2.122"></path>
				</svg>
				<span class="ml-4">Subjects</span>
			</a>
		</li>
	</ul>


	<ul>
		<li class="relative px-6 py-3">
			@* Highlight Track *@
			@if (IsActive("courses"))
			{
				<span class="absolute inset-y-0 left-0 w-1 bg-purple-600 rounded-tr-lg rounded-br-lg"
					  aria-hidden="true"></span>
			}
			<a class="inline-flex items-center w-full text-sm font-semibold transition-colors duration-150 hover:text-gray-800 dark:hover:text-gray-200"
			   href="courses">
				<svg class="w-5 h-5"
					 aria-hidden="true"
					 fill="none"
					 stroke-linecap="round"
					 stroke-linejoin="round"
					 stroke-width="2"
					 viewBox="0 0 24 24"
					 stroke="currentColor">
					<path d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
				</svg>
				<span class="ml-4">Courses</span>
			</a>
		</li>
	</ul>
</div>


@* <div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">SIMS</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Counter
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="weather">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Weather
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="auth">
                <span class="bi bi-lock-nav-menu" aria-hidden="true"></span> Auth Required
            </NavLink>
        </div>

        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Manage">
                        <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> @context.User.Identity?.Name
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                        <button type="submit" class="nav-link">
                            <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                        </button>
                    </form>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Register">
                        <span class="bi bi-person-nav-menu" aria-hidden="true"></span> Register
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Login">
                        <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Login
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </nav>
</div> *@

@code {
	private string? currentUrl;

	private string activeLink;

	protected override void OnInitialized()
	{
		// Initialize the active link based on the current URL
		activeLink = NavigationManager.Uri;
		NavigationManager.LocationChanged += OnLocationChanged;
	}

	private void SetActive(string link)
	{
		activeLink = link;
	}

	private bool IsActive(string link)
	{
		// Check if the current active link matches the provided link
		return activeLink.Contains(link);
	}

	private void OnLocationChanged(object sender, LocationChangedEventArgs e)
	{
		// Update the active link when the location changes
		activeLink = e.Location;
		StateHasChanged();
	}

	public void Dispose()
	{
		// Unsubscribe from the event when the component is disposed
		NavigationManager.LocationChanged -= OnLocationChanged;
	}
}

