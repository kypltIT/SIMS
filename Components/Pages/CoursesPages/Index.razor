@page "/-courses"

@using Microsoft.EntityFrameworkCore
@using SIMS.Models
@using SIMS.Data
@inject IDbContextFactory<ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Courses</PageTitle>

<h2 class="my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200">
    Courses
</h2>
    <hr class="mb-4" />
<div class="my-3">
    <a class="items-center px-4 py-2 text-sm font-medium text-white transition-colors duration-150 bg-purple-600 border border-transparent rounded-lg active:bg-purple-600 hover:bg-purple-700 focus:outline-none focus:shadow-outline-purple
    " href="/-courses/create">
        Create new
        <span class="ml-2" aria-hidden="true">+</span>
    </a>
 </div>
@if (courses is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Code</th>
                <th>Start Date</th>
                <th>End Date</th>
                <th>Semester</th>
                <th>Lecturer</th>
                <th>Subject</th>
                <th>Status</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var course in courses)
            {
                <tr>
                    <td>@course.Name</td>
                    <td>@course.Code</td>
                    <td>@course.StartDate.ToString("yyyy-MM-dd")</td>
                    <td>@course.EndDate.ToString("yyyy-MM-dd")</td>
                    <td>@course.Semester?.Name</td>
                    <td>@($"{course.Lecturer?.FirstName} {course.Lecturer?.LastName}")</td>
                    <td>@course.Subject?.Name</td>
                    <td>@course.Status</td>
                    <td>
                        <div class="flex items-center space-x-4 text-sm">
                                <a href="@($"-courses/edit?id={course.Id}")">
                                <svg class="w-5 h-5 text-purple-600" aria-hidden="true" fill="currentColor" viewBox="0 0 20 20">
                                    <path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z"></path>
                                </svg>
                            </a>
                            <a href="/-courses/deactivate/@course.Id">
                                <svg class="w-5 h-5 text-purple-600" aria-hidden="true" fill="currentColor" viewBox="0 0 20 20">
                                    <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd"></path>
                                </svg>
                            </a>
                         </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@code {
    private List<Courses>? courses;

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        courses = await context.Courses
                               .Include(c => c.Semester)
                               .Include(c => c.Lecturer)
                               .Include(c => c.Subject)
                               .ToListAsync();
    }
}
