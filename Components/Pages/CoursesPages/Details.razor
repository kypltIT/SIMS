@page "/-courses/details"

@using Microsoft.EntityFrameworkCore
@using SIMS.Models
@inject IDbContextFactory<SIMS.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<h2 class="my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200">
    Course Details
</h2>
<hr class="mb-4" />

<div>

    @if (courses is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@courses.Name</dd>
            <dt class="col-sm-2">StartDate</dt>
            <dd class="col-sm-10">@courses.StartDate</dd>
            <dt class="col-sm-2">EndDate</dt>
            <dd class="col-sm-10">@courses.EndDate</dd>
            <dt class="col-sm-2">Semester</dt>
            <dd class="col-sm-10">@courses.Semester.Name</dd>
            <dt class="col-sm-2">Lecture</dt>
            <dd class="col-sm-10">@courses.Lecturer.FirstName @courses.Lecturer.LastName</dd>
            <dt class="col-sm-2">Subject</dt>
            <dd class="col-sm-10">@courses.Subject.Name</dd>
        </dl>
        <div>
            <div class="mt-3">
                <a class="items-center px-4 py-2 text-sm font-medium text-white transition-colors duration-150 bg-purple-600 border border-transparent rounded-lg active:bg-purple-600 hover:bg-purple-700 focus:outline-none focus:shadow-outline-purple" href="@($"/-courses/edit?id={courses.Id}")">Edit</a> |
                <a href="@($"/-courses")">Back to List</a>
                |
            </div>
        </div>
    }
</div>

@code {
    Courses? courses;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        courses = await context.Courses.Include(m => m.Semester).Include(m => m.Subject).Include(m => m.Lecturer).FirstOrDefaultAsync(m => m.Id == Id);

        if (courses is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}