@page "/users/create"

@using Microsoft.EntityFrameworkCore
@using SIMS.Models
@inject IDbContextFactory<SIMS.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h4>Users</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Users" OnValidSubmit="AddUsers" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="code" class="form-label">Code:</label> 
                <InputText id="code" @bind-Value="Users.Code" class="form-control" /> 
                <ValidationMessage For="() => Users.Code" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="firstname" class="form-label">FirstName:</label> 
                <InputText id="firstname" @bind-Value="Users.FirstName" class="form-control" /> 
                <ValidationMessage For="() => Users.FirstName" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="lastname" class="form-label">LastName:</label> 
                <InputText id="lastname" @bind-Value="Users.LastName" class="form-control" /> 
                <ValidationMessage For="() => Users.LastName" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="email" class="form-label">Email:</label> 
                <InputText id="email" @bind-Value="Users.Email" class="form-control" /> 
                <ValidationMessage For="() => Users.Email" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="password" class="form-label">Password:</label> 
                <InputText id="password" @bind-Value="Users.Password" class="form-control" /> 
                <ValidationMessage For="() => Users.Password" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="roleid" class="form-label">RoleId:</label> 
                <InputNumber id="roleid" @bind-Value="Users.RoleId" class="form-control" /> 
                <ValidationMessage For="() => Users.RoleId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="dob" class="form-label">DoB:</label> 
                <InputDate id="dob" @bind-Value="Users.DoB" class="form-control" /> 
                <ValidationMessage For="() => Users.DoB" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="address" class="form-label">Address:</label> 
                <InputText id="address" @bind-Value="Users.Address" class="form-control" /> 
                <ValidationMessage For="() => Users.Address" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="genderid" class="form-label">GenderId:</label> 
                <InputNumber id="genderid" @bind-Value="Users.GenderId" class="form-control" /> 
                <ValidationMessage For="() => Users.GenderId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="phone" class="form-label">Phone:</label> 
                <InputNumber id="phone" @bind-Value="Users.Phone" class="form-control" /> 
                <ValidationMessage For="() => Users.Phone" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="majorid" class="form-label">MajorId:</label> 
                <InputNumber id="majorid" @bind-Value="Users.MajorId" class="form-control" /> 
                <ValidationMessage For="() => Users.MajorId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="intialadmissioncourse" class="form-label">IntialAdmissionCourse:</label> 
                <InputText id="intialadmissioncourse" @bind-Value="Users.IntialAdmissionCourse" class="form-control" /> 
                <ValidationMessage For="() => Users.IntialAdmissionCourse" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/users">Back to List</a>
</div>

@code {

    [SupplyParameterFromForm]
    public Users Users { get; set; } = new();

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddUsers()
    {
        using var context = DbFactory.CreateDbContext();
        context.Users.Add(Users);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/users");
    }
}
