@page "/users/delete"

@using Microsoft.EntityFrameworkCore
@using SIMS.Models
@inject IDbContextFactory<SIMS.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager


<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Users</h4>
    <hr />
    @if (users is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Code</dt>
            <dd class="col-sm-10">@users.Code</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">FirstName</dt>
            <dd class="col-sm-10">@users.FirstName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">LastName</dt>
            <dd class="col-sm-10">@users.LastName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Email</dt>
            <dd class="col-sm-10">@users.Email</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Password</dt>
            <dd class="col-sm-10">@users.Password</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">RoleId</dt>
            <dd class="col-sm-10">@users.RoleId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DoB</dt>
            <dd class="col-sm-10">@users.DoB</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Address</dt>
            <dd class="col-sm-10">@users.Address</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">GenderId</dt>
            <dd class="col-sm-10">@users.GenderId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Phone</dt>
            <dd class="col-sm-10">@users.Phone</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">MajorId</dt>
            <dd class="col-sm-10">@users.MajorId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">IntialAdmissionCourse</dt>
            <dd class="col-sm-10">@users.IntialAdmissionCourse</dd>
        </dl>
        <EditForm method="post" Model="users" OnValidSubmit="DeleteUsers" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(users is null)">Delete</button> |
            <a href="/users">Back to List</a>
        </EditForm>
    }
</div>

@code {
    Users? users;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        users = await context.Users.FirstOrDefaultAsync(m => m.Id == Id);

        if (users is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteUsers()
    {
        using var context = DbFactory.CreateDbContext();
        context.Users.Remove(users!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/users");
    }
}
