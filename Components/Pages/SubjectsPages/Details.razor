@page "/subjects/details"

@using Microsoft.EntityFrameworkCore
@using SIMS.Models
@inject IDbContextFactory<SIMS.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h2 class="my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200">
 Sebjects Details
</h2>
<hr class="mb-4" />
<div>
    @if (subjects is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@subjects.Name</dd>
            <dt class="col-sm-2">Major</dt>
            <dd class="col-sm-10">@subjects.Major.Name</dd>
            <dt class="col-sm-2">Code</dt>
            <dd class="col-sm-10">@subjects.Code</dd>
        </dl>
        <div>
            <button type="submit" class="items-center px-4 py-2 text-sm font-medium text-white transition-colors duration-150 bg-purple-600 border border-transparent rounded-lg active:bg-purple-600 hover:bg-purple-700 focus:outline-none focus:shadow-outline-purple
                    " disabled="@(subjects is null)">
                Delete
            </button> |
            <a href="/subjects">Back to List</a>
            |
        </div>
    }
</div>

@code {
    Subjects? subjects;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        subjects = await context.Subjects.Include(m=>m.Major).FirstOrDefaultAsync(m => m.Id == Id);

        if (subjects is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
