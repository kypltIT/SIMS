@page "/departments/create"

@using Microsoft.EntityFrameworkCore
@using SIMS.Models
@inject IDbContextFactory<SIMS.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<h2 class="my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200">
    Create Departments
</h2>
    <hr class="mb-4" />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Departments" OnValidSubmit="AddDepartments" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="name" class="form-label">Name:</label> 
                <InputText id="name" @bind-Value="Departments.Name" class="form-control" /> 
                <ValidationMessage For="() => Departments.Name" class="text-danger" /> 
            </div>
            <button class="items-center px-4 py-2 text-sm font-medium text-white transition-colors duration-150 bg-purple-600 border border-transparent rounded-lg active:bg-purple-600 hover:bg-purple-700 focus:outline-none focus:shadow-outline-purple
    " href="/departments/create">
                Create new
            </button> |
            <a href="/departments">Back to List</a>
            |
        </EditForm>
    </div>
</div>

<div>
</div>

@code {

    [SupplyParameterFromForm]
    public Departments Departments { get; set; } = new();

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddDepartments()
    {
        using var context = DbFactory.CreateDbContext();
        context.Departments.Add(Departments);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/departments");
    }
}
